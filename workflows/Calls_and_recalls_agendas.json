{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request_primera": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request_Segunda": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request_primera",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "HTTP Request_Segunda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Replace Me1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        []
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-20T22:26:17.120Z",
  "id": "wRERYDENQon9pbH4",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Calls_and_recalls_agendas",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "*/5 8-20 * * 1-5"
            },
            {
              "field": "=cronExpression",
              "expression": "=*/5 8-14 * * 6"
            }
          ]
        }
      },
      "id": "d75528c7-d7ec-4cfb-82d7-b1b81c659e56",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -100,
        -60
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "calloutbound_",
          "mode": "list",
          "cachedResultName": "calloutbound_"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "sucessfull",
              "value": "f"
            },
            {
              "column": "active",
              "value": "t"
            },
            {
              "column": "last_state",
              "value": "rellamada"
            }
          ]
        },
        "options": {}
      },
      "id": "36697081-8f23-44f7-a6ba-93b1d3970258",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        80,
        -40
      ],
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "postgres": {
          "id": "hnUS8UxUWHrcQri5",
          "name": "Postgresql_iallamadas"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f9b2d0c4-414f-4ab9-b886-356fb41bd51c",
              "leftValue": "=\n{{ $('Postgres').item.json.date_last_trx }}\n\n",
              "rightValue": "={{new Date(new Date().getTime() - (7 * 60 * 60 * 1000)).toISOString()}} ",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            },
            {
              "id": "79199b82-e62b-494d-92e5-03ac5ecc5787",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "d4dd78e3-2fda-4ede-94b7-ed8a8ec06756",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        300,
        -60
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "calloutbound",
          "mode": "list",
          "cachedResultName": "calloutbound"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "send_to_call": true,
            "call_eject": false,
            "active": "={{ $json.statusCode === 201 ? \"true\" : \"false\" }}",
            "uid": "={{ $('Postgres').item.json.uid }}",
            "attempts_counter": "={{ $('Postgres').item.json.attempts_counter +1}}",
            "err_500": "={{ $json.statusCode === 201 ? \"\" : \"llamada no conectada\" }}",
            "last_state": "marcado"
          },
          "matchingColumns": [
            "uid"
          ],
          "schema": [
            {
              "id": "uid",
              "displayName": "uid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "phone_number",
              "displayName": "phone_number",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "oddo_id",
              "displayName": "oddo_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "sucessfull",
              "displayName": "sucessfull",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "recall",
              "displayName": "recall",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "date_uploda",
              "displayName": "date_uploda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "date_last_trx",
              "displayName": "date_last_trx",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_state",
              "displayName": "last_state",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "reason_for_call",
              "displayName": "reason_for_call",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "campaign_name",
              "displayName": "campaign_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "send_to_call",
              "displayName": "send_to_call",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "call_eject",
              "displayName": "call_eject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "from_number",
              "displayName": "from_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "agent_id",
              "displayName": "agent_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "maximum_attempts",
              "displayName": "maximum_attempts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "time_between_calls",
              "displayName": "time_between_calls",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "attempts_counter",
              "displayName": "attempts_counter",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "formation",
              "displayName": "formation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "err_500",
              "displayName": "err_500",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "7a6aaeb4-2a3e-42b6-92db-7b855ecba06b",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1320,
        -420
      ],
      "credentials": {
        "postgres": {
          "id": "hnUS8UxUWHrcQri5",
          "name": "Postgresql_iallamadas"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.time_between_calls }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1ra"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d1ffea67-b4f3-4207-a41a-16b4563914f4",
                    "leftValue": "={{ $json.time_between_calls }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2da"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        500,
        -40
      ],
      "id": "9fbd2c77-6336-4b06-a06c-5582979d4b6a",
      "name": "Switch1"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "calloutbound",
          "mode": "list",
          "cachedResultName": "calloutbound"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "send_to_call": true,
            "call_eject": false,
            "active": "={{ $json.statusCode === 201 ? \"true\" : \"false\" }}",
            "uid": "={{ $('Postgres').item.json.uid }}",
            "attempts_counter": "={{ $('Postgres').item.json.attempts_counter +1}}",
            "err_500": "={{ $json.statusCode === 201 ? \"\" : \"llamada no conectada\" }}"
          },
          "matchingColumns": [
            "uid"
          ],
          "schema": [
            {
              "id": "uid",
              "displayName": "uid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "phone_number",
              "displayName": "phone_number",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "oddo_id",
              "displayName": "oddo_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "sucessfull",
              "displayName": "sucessfull",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "recall",
              "displayName": "recall",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "date_uploda",
              "displayName": "date_uploda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "date_last_trx",
              "displayName": "date_last_trx",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_state",
              "displayName": "last_state",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "reason_for_call",
              "displayName": "reason_for_call",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "campaign_name",
              "displayName": "campaign_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "send_to_call",
              "displayName": "send_to_call",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "call_eject",
              "displayName": "call_eject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "from_number",
              "displayName": "from_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "agent_id",
              "displayName": "agent_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "maximum_attempts",
              "displayName": "maximum_attempts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "time_between_calls",
              "displayName": "time_between_calls",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "attempts_counter",
              "displayName": "attempts_counter",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "formation",
              "displayName": "formation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "err_500",
              "displayName": "err_500",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "e615fcf2-9c4b-4e4e-b8d7-ad0724f954c0",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1340,
        60
      ],
      "credentials": {
        "postgres": {
          "id": "hnUS8UxUWHrcQri5",
          "name": "Postgresql_iallamadas"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.retellai.com/v2/create-phone-call",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"to_number\":\"{{ $json.phone_number }}\",\n\"from_number\":\"{{ $json.from_number }}\",\n\"override_agent_id\":\"{{ $json.agent_id }}\",\n\"retell_llm_dynamic_variables\": {\n\"name\":\"{{$json.name}}\",\n\"campaign_name\":\"{{$json.campaign_name}}\",\n\"llamada\": \"{{ $('Postgres').item.json.time_between_calls }}\",\n\"id_oddo\":\"{{$json.oddo_id}}\",\"email_user\":\"{{ $('Postgres').item.json.email }}\",\"uid\":\"{{ $('Postgres').item.json.uid }}\",\n\"chatInput\":\"\"}} ",
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "feece6d1-b56e-479f-8d8c-ed02a2861ee9",
      "name": "HTTP Request_primera",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1140,
        -420
      ],
      "alwaysOutputData": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "UZWddF8I8s7OjOEp",
          "name": "retell"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.retellai.com/v2/create-phone-call",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"to_number\":\"{{ $json.phone_number }}\",\n\"from_number\":\"{{ $json.from_number }}\",\n\"override_agent_id\":\"{{ $json.agent_id }}\",\n\"retell_llm_dynamic_variables\": {\n\"name\":\"{{$json.name}}\",\n\"campaign_name\":\"{{$json.campaign_name}}\",\n\"llamada\": \"{{ $('Postgres').item.json.time_between_calls }}\",\n\"date_last_conversation\": \"{{ $json.date_last_conversation }}\",\n\"formation\": \"{{ $json.formation }}\",\n\"last_conversation\": \"{{ $json.resumen_gerencial }}\",\n\"id_oddo\":\"{{$json.oddo_id}}\",\"email_user\":\"{{ $('Postgres').item.json.email }}\",\"uid\":\"{{ $('Postgres').item.json.uid }}\",\n\"chatInput\":\"\"}} ",
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "b26e7da7-cca5-4bd3-a678-d61a45d13434",
      "name": "HTTP Request_Segunda",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1180,
        40
      ],
      "alwaysOutputData": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "UZWddF8I8s7OjOEp",
          "name": "retell"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        940,
        -420
      ],
      "id": "b3fad64e-9eb4-4ce0-8f70-7e07e2ceee12",
      "name": "Wait",
      "webhookId": "313fa4de-64c2-4be4-8512-76d09da403a0"
    },
    {
      "parameters": {
        "batchSize": 5,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        760,
        -280
      ],
      "id": "9a0aa5f2-e32e-4c54-b42a-6a9af33dced2",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        940,
        -220
      ],
      "id": "507fa1ec-44d4-4418-9eb6-44b05948464a"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1000,
        40
      ],
      "id": "3c34cb23-44b5-4980-a801-d0d4dc246edc",
      "name": "Wait1",
      "webhookId": "a67cf022-1bb0-4d32-8637-525520c6d527"
    },
    {
      "parameters": {
        "batchSize": 5,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        760,
        40
      ],
      "id": "607d2995-74b2-4605-98e0-23dd143d24ee",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me1",
      "typeVersion": 1,
      "position": [
        1000,
        200
      ],
      "id": "fb2217db-e0fc-4ef2-923a-2aaf248ebdb6"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "responses_500",
          "mode": "list",
          "cachedResultName": "responses_500"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Id_oddo_response": "={{ $json.oddo_id }}",
            "Phone_Number": "={{ $json.phone_number }}",
            "Name": "={{ $json.name }}",
            "date": "={{ $now }}",
            "response": "={{ $('HTTP Request_primera').item.json.error?.message || $('HTTP Request_primera').item.json.error?.code || $('HTTP Request_primera').item.json.error?.status || JSON.stringify($('HTTP Request_primera').item.json.error) }}\n",
            "uuid": "={{ $('Schedule Trigger').item.json.timestamp }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Id_oddo_response",
              "displayName": "Id_oddo_response",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "response",
              "displayName": "response",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone_Number",
              "displayName": "Phone_Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "uuid",
              "displayName": "uuid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1700,
        -420
      ],
      "id": "ae1d7b23-ddb8-4b89-bae1-7f91da7a589c",
      "name": "Postgres3",
      "executeOnce": false,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "hnUS8UxUWHrcQri5",
          "name": "Postgresql_iallamadas"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3bed0965-08a1-4054-88e6-136b90f62a36",
              "leftValue": "={{ $('HTTP Request_primera').item.json.statusCode }}",
              "rightValue": 201,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1500,
        -420
      ],
      "id": "5b9a8b09-d7cf-4572-ae0f-e911832b45bc",
      "name": "Filter1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3bed0965-08a1-4054-88e6-136b90f62a36",
              "leftValue": "={{ $('HTTP Request_Segunda').item.json.statusCode }}",
              "rightValue": 201,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1500,
        60
      ],
      "id": "81799a61-9638-48d8-acdc-6d0f6b15a476",
      "name": "Filter2"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "responses_500",
          "mode": "list",
          "cachedResultName": "responses_500"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Id_oddo_response": "={{ $json.oddo_id }}",
            "Phone_Number": "={{ $json.phone_number }}",
            "Name": "={{ $json.name }}",
            "date": "={{ $now }}",
            "response": "={{ $('HTTP Request_Segunda').item.json.error?.message || $('HTTP Request_Segunda').item.json.error?.code || $('HTTP Request_Segunda').item.json.error?.status || JSON.stringify($('HTTP Request_Segunda').item.json.error) }}\n",
            "uuid": "={{ $('Schedule Trigger').item.json.timestamp }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Id_oddo_response",
              "displayName": "Id_oddo_response",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "response",
              "displayName": "response",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone_Number",
              "displayName": "Phone_Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "uuid",
              "displayName": "uuid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1680,
        60
      ],
      "id": "905e3280-4454-4196-a92d-cc6beed888f2",
      "name": "Postgres4",
      "executeOnce": false,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "hnUS8UxUWHrcQri5",
          "name": "Postgresql_iallamadas"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-12-19T22:53:31.528Z",
      "updatedAt": "2024-12-19T22:53:31.528Z",
      "id": "JeuR9KgbxHoHPzZx",
      "name": "Dinamic_Number_Display"
    },
    {
      "createdAt": "2024-12-04T00:40:48.979Z",
      "updatedAt": "2024-12-04T00:40:48.979Z",
      "id": "Y1BsKfyyH4T8xRCR",
      "name": "iallamadas"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-02-21T03:20:18.000Z",
  "versionId": "599d5721-734b-4875-98c4-1b92d7f0f50d"
}